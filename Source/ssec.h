// Иеалогия внутреннего времени позволяет легко задавать любые временные интервалы, необходимые в процессе общения с человеком
// и при генерации не слишком точных сигналов для аппаратуры, при этом можно задать любое количество интервалов
// Для этого:
// 1. сохраняем текущее время в переменную функцией getssec, например так: time=getssec();
// 2. В основном цикле периодически проверяем, не прошло ли нужное число времени:
//    if (tdlt(time)>100) {...
// Если нужное время прошло - выполняем действие и повторно сохраняем новое время
// 
// Можно также измерять какие-то достаточно большие длительности, например, длительность нажатия на кнопку пользователем
// Просто запомнив время в момент начала действия и по окончании действия узнав длительность.
//
// Недостатком является низкая точность и необходимость проверять постоянно прошло время или нет - поэтому данный метод
// не применим для точных измерений и точной генерации. Это лучше делать аппаратными средствами таймера или по прерываниям от таймера
//
// Дополнительная функция zgetssec нужна для генерации единичных интервалов. Пока время time равно нулю, интервал считается не 
// активированным, сравнение с текущим временем не выполняется и ничего не происходит.
// Для активации интервала выполняется time=zgetssec() - функция гарантирует, что будет записан не ноль, даже если счетчик времени
// в момент вызова равен нулю. Как тольно запомненное значение не нулевое, выполняется сравнение с текущим временем, и по истечении
// нужного интервала выполняется нужная операция, а сохраненное значение обнуляется.
//
// Также внутрь файла ssec.c, внутрь процедуры обработчика прерывания, часто добавляются действия, которые нужно делать 
// непрерывно, например опрос входов или кнопок с алгоритмом фильтрации дребезга контактов. Это уже зависит от конкретной
// задачи.
// В текущей программе постоянно выполняется функция FPU1HTimerInterrupt - обработчик прерываний от таймера автомата управления
// выводом переключения прием-передача последовательного порта.
#ifndef SSEC_H
#define SSEC_H

#include "mainconfig.h"

#define SSECVOLUME 1000    // Число отсчетов в секунду

// Инициализация и запуск таймера генерации внутреннего времени
void InitSSEC(void);
//////////////////////////////////
// функции работы со временем
uint32_t getssec(void);       // Получить текущее время
uint32_t zgetssec(void);      // Получить текущее время, но не ноль. Если вдруг текущее время равно 0, возвращается число (0-1)
uint32_t tdlt(uint32_t time); // Получить прошедший с времени time по текущее время промежуток

#endif
